:PROPERTIES:
:ID:       c3091d23-c79b-45d0-9b28-a976731f9ce2
:END:
#+title: Is Power Of Two
#+filetags: :Problem:BitManipulation:

* [[id:f23824a1-0515-47c6-b386-21d83a9aec21][PROBLEM]]
Given an integer =n=, return =true= if it is a power of two. Otherwise, return =false=.

An integer =n= is a power of two, if there exists an integer =x= such that =n == 2x.=

** Example1
#+begin_src org
*Input*: n = 1
*Output*: true
Explanation: 20 = 1
#+end_src

** Example2
#+begin_src org
*Input*: n = 16
*Output*: true
Explanation: 24 = 16
#+end_src

** Example3
#+begin_src org
*Input*: n = 3
*Output*: false
#+end_src

* SOLVING
we'll use [[id:473ee769-750d-4c14-b63a-c4f0a9acd928][Bit manipulation]] method.
Since in binary each =bit= is a power of =2= wee can use this to know if it's a power of 2 or not

** First Approach
If the number of =1= is equal to =1= so it's a power of 2

*** Steps
+ While our =n= is superior to 0:
  - If the first bit is =1= increase =count=
  - Use =shift right= to move all =bits= one on the right
+ If =count= equal =1= so it's a =power of 2=

**** Example 16
#+begin_src txt
[1,0,0,0,0]
     &      == FALSE
[0,0,0,0,1]

[0,1,0,0,0]
     &      == FALSE
[0,0,0,0,1]

[0,0,1,0,0]
     &      == FALSE
[0,0,0,0,1]

[0,0,0,1,0]
     &      == FALSE
[0,0,0,0,1]

[0,0,0,0,1]
     &      == TRUE | COUNT += 1
[0,0,0,0,1]

COUNT = 1 | 16 is a power of 2
#+end_src

**** Example 5
#+begin_src markdown
[0,0,1,0,1]
     &      == TRUE | COUNT += 1
[0,0,0,0,1]

[0,0,0,1,0]
     &      == FALSE
[0,0,0,0,1]

[0,0,0,0,1]
     &      == TRUE | COUNT += 1
[0,0,0,0,1]

COUNT = 2 | 5 is **not** a power of 2
#+end_src
*** Code
#+begin_src cpp
class Solution {
public:
  bool isPowerOfTwo(int n) {
    int count = 0;

    while (n > 0) {
      if (n & 1)
        count++;
      n = n >> 1; // or n >>= 1
    }
    return count == 1;
  }
};
#+end_src

** Second Approach
Check if there is similarities between =n= and =n-1=

*** Steps
+ Return =false= if =x<=0=
+ Return the result of =&= comparison between =n= and =n-1=
+ Yeah that's all x)

**** Example 16
#+begin_src markdown
[1,0,0,0,0] | 16
     &      == FALSE | 16 is a power of 2
[0,1,1,1,1] | 15
#+end_src

**** Example 5
#+begin_src markdown
[0,0,1,0,1] | 5
     &      == TRUE | 5 is **not** a power of 2
[0,0,1,0,0] | 4
#+end_src

*** Code
#+begin_src cpp
class Solution {
public:
  bool isPowerOfTwo(int n) {
    if (n <= 0)
      return false;
    return !(n & n - 1);
  }
};
#+end_src
